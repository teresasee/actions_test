import { describe, it, expect } from 'vitest'

import { mount } from '@vue/test-utils'
import HelloWorld from '../HelloWorld.vue'
import RandomNumber from "@/components/RandomNumber.vue";

// By Default

describe('HelloWorld', () => {
  it('renders properly', () => {
    const wrapper = mount(HelloWorld, {
      props: { msg: 'test' } 
    })
    expect(wrapper.text()).toContain('test')
  })
})

// Activity 2

describe("RandomNumber.vue", () => {
  it("By default the random number should be 0", () => {
    const wrapper = mount(RandomNumber)
    expect(wrapper.html()).toContain('0')
  }),

// Activity 3

  it("if button clicked, the random number should be  from 1-10", async() => {
    const wrapper = mount(RandomNumber)
    await wrapper.find('button').trigger('click')
    const random_number = parseInt(wrapper.find('h2').text())
    expect(random_number).toBeGreaterThanOrEqual(0)
    expect(random_number).toBeLessThanOrEqual(10)
  }),

  // Optional Activity

  it("the number follows the props min max", async() => {
    const wrapper = mount(RandomNumber,{
      props:{
        min:40,max:100
      }
    })
    await wrapper.find('button').trigger('click')
    const random_number = parseInt(wrapper.find('h2').text())
    expect(random_number).toBeGreaterThanOrEqual(40)
    expect(random_number).toBeLessThanOrEqual(100)
  }),

  // Extra

  it("generates random numbers within the expected range", () => {
    const wrapper = mount(RandomNumber);
    
    for (let i = 0; i < 1; i++) {
      wrapper.find('button').trigger('click');
      const random_number = parseInt(wrapper.find('h2').text());
      expect(random_number).toBeGreaterThanOrEqual(0);
      expect(random_number).toBeLessThanOrEqual(10);
    }
  })  
})

------------------------------Random Number .Vue--------------------

<template>
    <h1>Welcome to Unit Testing!</h1>
    <button @click="genRanNum()">Generate random Number</button>
    <h2>{{random_number}}</h2>
</template>

<script>
    export default {
    name: 'RandomNumber',

    data(){
        return{
        random_number:0
        }
    },

    props: {
        min:{type: Number, default: 1},
        max:{type: Number, default: 10}
    },

    methods:{
        genRanNum(){
        this.random_number = Math.floor(Math.random() * (this.max - this.min + 1) + this.min) // generate random number from 1 to 10
        }
    }
    }
</script>

<style scoped>
h3 {
  margin: 40px 0 0;
}
ul {
  list-style-type: none;
  padding: 0;
}
li {
  display: inline-block;
  margin: 0 10px;
}
a {
  color: #42b983;
}
</style>

--------------------------------App. Vue-------------
<template>
  <RandomNumber/>
</template>

<script>
import RandomNumber from "@/components/RandomNumber.vue";

export default {
  name: "App",
  components: {
    RandomNumber,
  },
};
</script>

<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
</style>